

.. _sphx_glr_generated_gallery_map_from_numpy_array.py:


=========================================
Generating a Map From Data
=========================================

A simple demonstration of creating a map from a numpy array of data.


Start by importing the necessary modules.



.. code-block:: python


    from __future__ import print_function, division

    import numpy as np
    import matplotlib.pyplot as plt

    import sunpy.map
    import sunpy.data.sample







SunPy Maps store 2D data in a numpy array and additional data in a metadata
dictionary giving information relating to the data and instrument.



.. code-block:: python

    data = np.random.rand(20,15)
    header = {}
    manual_map = sunpy.map.Map((data, header))







In general the attributes are populated using details in the metadata and in
this case there is no centre pixel or pixel size information given so SunPy
is defaulting to assuming each pixel is 1 arcsec.



.. code-block:: python

    print(manual_map.xrange)
    print(manual_map.yrange)
    # This is in Helioprojective tangent projection in both longitude and latitude:
    print(manual_map.coordinate_system)





.. rst-class:: sphx-glr-script-out

 Out::

    [ 0.49791667  0.50208333] deg
    [ 0.49722222  0.50277778] deg
    SpatialPair(axis1='HPLN-   ', axis2='HPLT-   ')


You can quickly plot a map using the peek method:



.. code-block:: python

    manual_map.peek()
    plt.show()



.. image:: /generated/gallery/images/sphx_glr_map_from_numpy_array_001.png
    :align: center




**Total running time of the script:** ( 0 minutes  1.841 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: map_from_numpy_array.py <map_from_numpy_array.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: map_from_numpy_array.ipynb <map_from_numpy_array.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
