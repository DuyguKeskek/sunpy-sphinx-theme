

.. _sphx_glr_generated_gallery_mask_disk.py:


======================
Masking the solar disk
======================

This example shows how to mask off emission from the disk.



.. code-block:: python

    from __future__ import print_function, division

    import numpy as np
    import numpy.ma as ma
    import matplotlib.pyplot as plt

    import astropy.units as u

    import sunpy.map
    from sunpy.data.sample import AIA_171_IMAGE







We first create the Map using the sample data.



.. code-block:: python


    aia = sunpy.map.Map(AIA_171_IMAGE)







Next we build two arrays which include all of the x and y pixel indices.
We must not forget to add the correct units because we will next pass
into a SunPy function which all require them.



.. code-block:: python


    x, y = np.meshgrid(*[np.arange(v.value) for v in aia.dimensions]) * u.pixel







Now we can convert this to helioprojective coordinates and create a new
array which contains the normalized radial position for each pixel



.. code-block:: python


    hpc_coords = aia.pixel_to_data(x, y)
    r = np.sqrt(hpc_coords.Tx ** 2 + hpc_coords.Ty ** 2) / aia.rsun_obs







Finally, we create a mask where all values which are less then Rsun are
masked. We also make a slight change to the colormap so that masked values
are shown as black instead of the default white.



.. code-block:: python


    mask = ma.masked_less_equal(r, 1)
    palette = aia.plot_settings['cmap']
    palette.set_bad('black')







Now we create a new custom aia with our new mask and
plot the result using our modified colormap



.. code-block:: python


    scaled_map = sunpy.map.Map(aia.data, aia.meta, mask=mask.mask)

    fig = plt.figure()
    plt.subplot(projection=scaled_map)
    scaled_map.plot(cmap=palette)
    scaled_map.draw_limb()
    plt.show()



.. image:: /generated/gallery/images/sphx_glr_mask_disk_001.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.935 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: mask_disk.py <mask_disk.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: mask_disk.ipynb <mask_disk.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
